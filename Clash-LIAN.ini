# ============================================================
# Clash YAML 配置文件 (版本 2)
#
# 生成依据:
# - clash-all-fallback.yaml (主要逻辑结构)
# - Clash-LIAN.ini (规则集和节点组定义)
#
# 功能特性:
# 1. 故障转移组 (Fallback): 结合手动选择和自动节点选择。
#    - 主节点: 手动选择 (Select 类型)。
#    - 备用节点: 自动测速 (url-test 类型)。
# 2. 自动故障切换: 当手动选择的节点不可用时，切换到 url-test 组。
# 3. 自动恢复: 当手动选择的节点恢复可用时，自动切回 (lazy: false)。
# 4. 规则和服务分组: 沿用 Clash-LIAN.ini 中的定义。
# ============================================================

# ========================
# 代理订阅提供者 (Proxy Providers)
# 重要提示: 请将 "YOUR_SUBSCRIPTION_LINK_HERE" 替换为您的实际订阅链接。
# 您可以根据需要添加多个订阅。
# ========================
proxy-providers:
  MainSubscription: # 您可以为您的订阅命名，例如 MyAirport, Subscription1 等
    type: http
    url: "YOUR_SUBSCRIPTION_LINK_HERE" # <--- 在这里替换您的订阅链接
    interval: 3600 # 每小时更新一次订阅 (单位: 秒)
    path: ./main_subscription.yaml # 下载的节点配置将保存在此文件
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204 # 健康检查URL
      interval: 300 # 每5分钟检查一次节点健康状况

# ========================
# 基础代理节点 (Proxies)
# ========================
proxies:
  - name: 直连
    type: direct
  - name: 拒绝
    type: reject

# ========================
# 常规设置 (General Settings)
# ========================
port: 7890
socks-port: 7891
mixed-port: 7893 # 支持 HTTP 和 SOCKS5 的混合端口
allow-lan: true
mode: rule # 规则模式
log-level: info # 日志级别 (可选: silent, error, warning, info, debug)
external-controller: 0.0.0.0:9090 # Clash 控制面板的访问地址和端口
# secret: "YourSecretPassword" # 可选: 为外部控制器设置密码
# external-ui: /path/to/your/dashboard # 可选: 指定外部 UI (例如 yacd) 的路径

# ========================
# DNS 设置
# ========================
dns:
  enable: true
  listen: 0.0.0.0:5353 # DNS 监听地址和端口
  ipv6: false # 是否启用 IPv6 DNS 解析
  enhanced-mode: fake-ip # fake-ip 或 redir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP 地址池
  # use-hosts: true # 是否使用系统 hosts 文件
  nameserver:
    - 223.5.5.5 # 阿里 DNS
    - 119.29.29.29 # 腾讯 DNS
    - 114.114.114.114 # 114 DNS
  fallback: # 当主 DNS 解析失败或结果为 Fake IP 时使用
    - tls://dns.google:853 # Google DoT
    - https://doh.pub/dns-query # DNSPod DoH
  fallback-filter:
    geoip: true # 对地理位置为中国的域名，即使解析到 Fake IP 也尝试 Fallback DNS
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4 # 保留地址不走 Fallback
    domain:
      - +.google.com # Google 相关域名强制走 Fallback

# ========================
# 策略组定义 (Proxy Groups)
# ========================
# 默认策略锚点，用于简化后续策略组的 proxies 列表
default-select-policies: &default-select-policies
  - 故障转移-香港
  - 故障转移-台湾
  - 故障转移-日本
  - 故障转移-新加坡
  - 故障转移-韩国
  - 故障转移-美国
  - 故障转移-其他地区
  - 自动选择-所有节点
  - 自动选择-港台日新韩
  - 自动选择-台日新韩
  - 直连
  - 拒绝

# 策略组配置
proxy-groups:
  # --- 业务分流策略组 (基于 Clash-LIAN.ini) ---
  # 这些是您将在规则中主要使用的策略组
  - name: 👽 AI服务
    type: select
    proxies: *default-select-policies
  - name: 📘 GitHub访问
    type: select
    proxies: *default-select-policies
  - name: 👯‍♂️ TikTok专用
    type: select
    proxies: [*default-select-policies, 自动选择-TikTok优化] # 可以为特定服务添加更细化的自动选择组
  - name: 🙋 Telegram通讯
    type: select
    proxies: *default-select-policies
  - name: 📀 流媒体服务
    type: select
    proxies: *default-select-policies
  - name: 🌍 国外网站
    type: select
    proxies: *default-select-policies
  - name: ➡️ 国内直连
    type: select
    proxies: [直连, 故障转移-香港] # 国内流量默认直连，香港作为备选

  # --- 区域故障转移组 (核心逻辑) ---
  # 每个区域包含一个 "手动选择" 和一个 "自动选择" 子组

  # --- 香港区域 ---
  - name: 故障转移-香港
    type: fallback # 当 "手动选择-香港" 不可用时，会使用 "自动选择-香港"
    proxies:
      - 手动选择-香港
      - 自动选择-香港
    url: http://www.gstatic.com/generate_204 # 健康检查 URL
    interval: 300 # 每 5 分钟检查一次主节点是否恢复
    lazy: false # 主节点恢复后立即切换回来
  - name: 手动选择-香港
    type: select # 允许用户手动选择香港节点
    use: [MainSubscription] # 从哪些订阅中选择节点
    filter: "(广港|香港|HK|Hong Kong|🇭🇰|HongKong)" # 节点名称过滤器
    include-all-providers: true # 如果使用多个 provider，是否包含所有 provider 的节点
  - name: 自动选择-香港
    type: url-test # 自动选择延迟最低的香港节点
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204 # 测速 URL
    interval: 600 # 每 10 分钟测速一次
    tolerance: 150 # 延迟容差 (ms)，切换阈值
    filter: "(广港|香港|HK|Hong Kong|🇭🇰|HongKong)"

  # --- 台湾区域 ---
  - name: 故障转移-台湾
    type: fallback
    proxies:
      - 手动选择-台湾
      - 自动选择-台湾
      - 自动选择-牛逼台湾 # Clash-LIAN.ini 中的特殊台湾组
    url: http://www.gstatic.com/generate_204
    interval: 300
    lazy: false
  - name: 手动选择-台湾
    type: select
    use: [MainSubscription]
    filter: "(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)"
    include-all-providers: true
  - name: 自动选择-台湾
    type: url-test
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    filter: "(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)"

  # --- 日本区域 ---
  - name: 故障转移-日本
    type: fallback
    proxies:
      - 手动选择-日本
      - 自动选择-日本
    url: http://www.gstatic.com/generate_204
    interval: 300
    lazy: false
  - name: 手动选择-日本
    type: select
    use: [MainSubscription]
    filter: "(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)"
    include-all-providers: true
  - name: 自动选择-日本
    type: url-test
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    filter: "(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)"

  # --- 新加坡区域 ---
  - name: 故障转移-新加坡
    type: fallback
    proxies:
      - 手动选择-新加坡
      - 自动选择-新加坡
    url: http://www.gstatic.com/generate_204
    interval: 300
    lazy: false
  - name: 手动选择-新加坡
    type: select
    use: [MainSubscription]
    filter: "(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)"
    include-all-providers: true
  - name: 自动选择-新加坡
    type: url-test
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    filter: "(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)"

  # --- 韩国区域 ---
  - name: 故障转移-韩国
    type: fallback
    proxies:
      - 手动选择-韩国
      - 自动选择-韩国
    url: http://www.gstatic.com/generate_204
    interval: 300
    lazy: false
  - name: 手动选择-韩国
    type: select
    use: [MainSubscription]
    filter: "(广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)"
    include-all-providers: true
  - name: 自动选择-韩国
    type: url-test
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    filter: "(广韩|韩国|韓國|KR|首尔|春川|🇰🇷|Korea)"

  # --- 美国区域 ---
  - name: 故障转移-美国
    type: fallback
    proxies:
      - 手动选择-美国
      - 自动选择-美国
    url: http://www.gstatic.com/generate_204
    interval: 300
    lazy: false
  - name: 手动选择-美国
    type: select
    use: [MainSubscription]
    filter: "(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|硅谷|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)"
    include-all-providers: true
  - name: 自动选择-美国
    type: url-test
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    filter: "(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|硅谷|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)"

  # --- 其他地区域 ---
  # 使用 Clash-LIAN.ini 中的 "其他-自动" 过滤器
  - name: 故障转移-其他地区
    type: fallback
    proxies:
      - 手动选择-其他地区
      - 自动选择-其他地区
    url: http://www.gstatic.com/generate_204
    interval: 300
    lazy: false
  - name: 手动选择-其他地区
    type: select
    use: [MainSubscription]
    filter: "(波|柬|尼|也|克|比|尔|立|冰|秘|耳|利|埃|希|孟|芬|愛|澳|英|德|南|意|法|拿|墨|印|越|俄|瑞|智|荷|比|巴|沙|班|泰|德|烏|以|Australia|Konghwaguk)" # 来自 Clash-LIAN.ini 的其他地区过滤器
    include-all-providers: true
  - name: 自动选择-其他地区
    type: url-test
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    filter: "(波|柬|尼|也|克|比|尔|立|冰|秘|耳|利|埃|希|孟|芬|愛|澳|英|德|南|意|法|拿|墨|印|越|俄|瑞|智|荷|比|巴|沙|班|泰|德|烏|以|Australia|Konghwaguk)"

  # --- 聚合自动选择组 (基于 Clash-LIAN.ini) ---
  - name: 自动选择-所有节点
    type: url-test
    use: [MainSubscription]
    url: http://www.gstatic.com/generate_204
    interval: 600 # 10分钟测速一次
    tolerance: 150 # 延迟容差
    include-all-providers: true
    # filter: ".*" # 不过虑，选择所有可用节点
  - name: 自动选择-港台日新韩
    type: url-test
    use: [MainSubscription]
    filter: "(广港|广台|广日|广新|广韩|香港|HK|Hong Kong|🇭🇰|HongKong|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|首尔|春川|🇰🇷|Korea)"
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    include-all-providers: true
  - name: 自动选择-台日新韩
    type: url-test
    use: [MainSubscription]
    filter: "(广台|广日|广新|广韩|台湾|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|新加坡|SG|坡|狮城|🇸🇬|Singapore|韩国|KR|首尔|春川|🇰🇷|Korea)"
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    include-all-providers: true
  - name: 自动选择-牛逼台湾
    type: url-test
    use: [MainSubscription]
    filter: "牛逼 \\| 台湾 0[1-6]" # 注意 YAML 中 `|` 需要转义或用引号包裹
    url: http://www.gstatic.com/generate_204
    interval: 600
    tolerance: 150
    include-all-providers: true
  - name: 自动选择-TikTok优化
    type: url-test
    use: [MainSubscription]
    # 假设TikTok节点有特殊标识，例如 "TikTok" 或 "抖音"
    filter: "(TikTok|抖音|US TikTok)" # 您可能需要根据您的节点名称调整此过滤器
    url: http://www.gstatic.com/generate_204 # 或者使用 TikTok 相关的测速地址
    interval: 600
    tolerance: 150
    include-all-providers: true

# ========================
# 规则集提供者 (Rule Providers)
# 基于 Clash-LIAN.ini 中的 ruleset 定义
# ========================
# 规则集类型锚点
rule-provider-types:
  text-classical: &text-classical
    type: http
    behavior: classical # domain 关键词匹配, classical 完整匹配
    format: text # text 或 yaml
    interval: 86400 # 每天更新一次规则集

rule-providers:
  # AI 服务规则
  RuleAI1: {<<: *text-classical, url: "https://raw.githubusercontent.com/1664666655/clash/refs/heads/main/list/AI.list"}
  RuleAI2: {<<: *text-classical, url: "https://raw.githubusercontent.com/1664666655/clash/refs/heads/main/list/AI2.list"}
  # GitHub 规则
  RuleGitHub: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/GitHub/GitHub.list"}
  # TikTok 规则
  RuleTikTok: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/TikTok/TikTok.list"}
  # Telegram 规则
  RuleTelegram: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list"}
  # 流媒体规则
  RuleStreamingGeneral: {<<: *text-classical, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/YouTube.list"} # 假设这是一个通用的流媒体列表
  RuleYouTube: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list"}
  RuleHBO: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/HBO/HBO.list"}
  RuleDisney: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list"}
  RuleNetflix: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list"}
  RuleSpotify: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.list"}
  RuleSpringLoading: {<<: *text-classical, url: "https://raw.githubusercontent.com/1664666655/clash/refs/heads/main/list/sping.list"} # 名字可能是 "Loading" 或其他
  # 国外网站规则
  RuleForeignCheck: {<<: *text-classical, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Check.list"} # 可能是需要代理的检测类域名
  RuleForeignProxy: {<<: *text-classical, url: "https://raw.githubusercontent.com/liandu2024/clash/refs/heads/main/list/Proxy.list"} # 通用代理列表
  RuleForeignGlobal: {<<: *text-classical, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Global/Global.list"} # 全球列表
  # 国内网站规则 (通常用于直连)
  RuleGeositeCN: {type: http, behavior: domain, format: text, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.txt", interval: 86400}
  RuleGeoIPCN: {type: http, behavior: ipcidr, format: text, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.txt", interval: 86400}
  RulePrivateNetwork: {type: http, behavior: domain, format: text, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.txt", interval: 86400} # 私有网络/局域网域名

# ========================
# 规则引擎 (Rules Engine)
# ========================
rules:
  # --- AI 服务 ---
  - RULE-SET,RuleAI1,👽 AI服务
  - RULE-SET,RuleAI2,👽 AI服务
  # --- GitHub ---
  - RULE-SET,RuleGitHub,📘 GitHub访问
  # --- TikTok ---
  - RULE-SET,RuleTikTok,👯‍♂️ TikTok专用
  # --- Telegram ---
  - RULE-SET,RuleTelegram,🙋 Telegram通讯
  # --- 流媒体 ---
  - RULE-SET,RuleStreamingGeneral,📀 流媒体服务
  - RULE-SET,RuleYouTube,📀 流媒体服务
  - RULE-SET,RuleHBO,📀 流媒体服务
  - RULE-SET,RuleDisney,📀 流媒体服务
  - RULE-SET,RuleNetflix,📀 流媒体服务
  - RULE-SET,RuleSpotify,📀 流媒体服务
  - RULE-SET,RuleSpringLoading,📀 流媒体服务 # 根据实际用途可能分配给特定流媒体或国外网站
  # --- 需要代理的国外网站 ---
  - RULE-SET,RuleForeignCheck,🌍 国外网站
  - RULE-SET,RuleForeignProxy,🌍 国外网站
  - RULE-SET,RuleForeignGlobal,🌍 国外网站
  # --- 国内网站和IP直连 ---
  - RULE-SET,RuleGeositeCN,➡️ 国内直连
  - RULE-SET,RuleGeoIPCN,➡️ 国内直连,no-resolve # IP规则通常不需要DNS解析
  - RULE-SET,RulePrivateNetwork,➡️ 国内直连 # 局域网地址直连
  # --- 其他常见规则 ---
  - DOMAIN-SUFFIX,local,➡️ 国内直连 # 本地设备
  - IP-CIDR,192.168.0.0/16,➡️ 国内直连,no-resolve # 局域网A类
  - IP-CIDR,10.0.0.0/8,➡️ 国内直连,no-resolve # 局域网B类
  - IP-CIDR,172.16.0.0/12,➡️ 国内直连,no-resolve # 局域网C类
  - IP-CIDR,127.0.0.0/8,➡️ 国内直连,no-resolve # 本机回环
  - IP-CIDR,198.18.0.0/16,➡️ 国内直连,no-resolve # Fake IP Range，确保直连
  # --- GEOIP 中国区 IP 直连 ---
  - GEOIP,CN,➡️ 国内直连
  # --- 最终匹配规则 ---
  # 所有未匹配到的流量，默认也走 "国外网站" 策略组，您可以按需修改为其他，例如 "自动选择-所有节点" 或 "拒绝"
  - MATCH,🌍 国外网站
